{"version":3,"sources":["../src/lib/draw_rounded.ts","../src/lib/draw_mode.ts","../src/lib/dom.ts","../src/lib/create_canvas_qrcode.ts","../src/lib/create_svg_qrcode.ts","../src/lib/options.ts","../src/lib/qrcode.ts","../src/kjua.ts"],"sourcesContent":["import type { KjuaOptions } from './options';\nimport type { QRCode } from './qrcode';\n\nconst create_draw_ctx = (ctx: CanvasRenderingContext2D) => {\n\treturn {\n\t\tm(x: number, y: number) {\n\t\t\tctx.moveTo(x, y);\n\t\t\treturn this;\n\t\t},\n\t\tl(x: number, y: number) {\n\t\t\tctx.lineTo(x, y);\n\t\t\treturn this;\n\t\t},\n\t\ta(...args: Parameters<typeof ctx.arcTo>) {\n\t\t\tctx.arcTo(...args);\n\t\t\treturn this;\n\t\t},\n\t};\n};\n\ntype DrawCtx = ReturnType<typeof create_draw_ctx>;\n\nconst draw_dark = (\n\tctx: DrawCtx,\n\tl: number,\n\tt: number,\n\tr: number,\n\tb: number,\n\trad: number,\n\tnw: boolean,\n\tne: boolean,\n\tse: boolean,\n\tsw: boolean,\n) => {\n\tif (nw) {\n\t\tctx.m(l + rad, t);\n\t} else {\n\t\tctx.m(l, t);\n\t}\n\n\tif (ne) {\n\t\tctx.l(r - rad, t).a(r, t, r, b, rad);\n\t} else {\n\t\tctx.l(r, t);\n\t}\n\n\tif (se) {\n\t\tctx.l(r, b - rad).a(r, b, l, b, rad);\n\t} else {\n\t\tctx.l(r, b);\n\t}\n\n\tif (sw) {\n\t\tctx.l(l + rad, b).a(l, b, l, t, rad);\n\t} else {\n\t\tctx.l(l, b);\n\t}\n\n\tif (nw) {\n\t\tctx.l(l, t + rad).a(l, t, r, t, rad);\n\t} else {\n\t\tctx.l(l, t);\n\t}\n};\n\nconst draw_light = (\n\tctx: DrawCtx,\n\tl: number,\n\tt: number,\n\tr: number,\n\tb: number,\n\trad: number,\n\tnw: boolean,\n\tne: boolean,\n\tse: boolean,\n\tsw: boolean,\n) => {\n\tif (nw) {\n\t\tctx.m(l + rad, t)\n\t\t\t.l(l, t)\n\t\t\t.l(l, t + rad)\n\t\t\t.a(l, t, l + rad, t, rad);\n\t}\n\n\tif (ne) {\n\t\tctx.m(r - rad, t)\n\t\t\t.l(r, t)\n\t\t\t.l(r, t + rad)\n\t\t\t.a(r, t, r - rad, t, rad);\n\t}\n\n\tif (se) {\n\t\tctx.m(r - rad, b)\n\t\t\t.l(r, b)\n\t\t\t.l(r, b - rad)\n\t\t\t.a(r, b, r - rad, b, rad);\n\t}\n\n\tif (sw) {\n\t\tctx.m(l + rad, b)\n\t\t\t.l(l, b)\n\t\t\t.l(l, b - rad)\n\t\t\t.a(l, b, l + rad, b, rad);\n\t}\n};\n\nconst draw_module_rounded = (\n\tqr: QRCode,\n\tctx: CanvasRenderingContext2D,\n\tsettings: KjuaOptions,\n\twidth: number,\n\trow: number,\n\tcol: number,\n) => {\n\tconst left = col * width;\n\tconst top = row * width;\n\tconst right = left + width;\n\tconst bottom = top + width;\n\tconst radius = settings.rounded * 0.005 * width;\n\n\tconst is_dark = qr.is_dark;\n\tconst row_n = row - 1;\n\tconst row_s = row + 1;\n\tconst col_w = col - 1;\n\tconst col_e = col + 1;\n\tconst dark_center = is_dark(row, col);\n\tconst dark_nw = is_dark(row_n, col_w);\n\tconst dark_n = is_dark(row_n, col);\n\tconst dark_ne = is_dark(row_n, col_e);\n\tconst dark_e = is_dark(row, col_e);\n\tconst dark_se = is_dark(row_s, col_e);\n\tconst dark_s = is_dark(row_s, col);\n\tconst dark_sw = is_dark(row_s, col_w);\n\tconst dark_w = is_dark(row, col_w);\n\n\tconst draw_ctx = create_draw_ctx(ctx);\n\tif (dark_center) {\n\t\tdraw_dark(\n\t\t\tdraw_ctx,\n\t\t\tleft,\n\t\t\ttop,\n\t\t\tright,\n\t\t\tbottom,\n\t\t\tradius,\n\t\t\t!dark_n && !dark_w,\n\t\t\t!dark_n && !dark_e,\n\t\t\t!dark_s && !dark_e,\n\t\t\t!dark_s && !dark_w,\n\t\t);\n\t} else {\n\t\tdraw_light(\n\t\t\tdraw_ctx,\n\t\t\tleft,\n\t\t\ttop,\n\t\t\tright,\n\t\t\tbottom,\n\t\t\tradius,\n\t\t\tdark_n && dark_w && dark_nw,\n\t\t\tdark_n && dark_e && dark_ne,\n\t\t\tdark_s && dark_e && dark_se,\n\t\t\tdark_s && dark_w && dark_sw,\n\t\t);\n\t}\n};\n\nexport default draw_module_rounded;\n","import type { KjuaOptions } from './options';\n\nconst draw_label = (ctx: CanvasRenderingContext2D, settings: KjuaOptions) => {\n\tconst size = settings.size;\n\tconst font =\n\t\t'bold ' + settings.mSize * 0.01 * size + 'px ' + settings.fontname;\n\n\tctx.strokeStyle = settings.back;\n\tctx.lineWidth = settings.mSize * 0.01 * size * 0.1;\n\tctx.fillStyle = settings.fontcolor;\n\tctx.font = font;\n\n\tconst w = ctx.measureText(settings.label).width;\n\tconst sh = settings.mSize * 0.01;\n\tconst sw = w / size;\n\tconst sl = (1 - sw) * settings.mPosX * 0.01;\n\tconst st = (1 - sh) * settings.mPosY * 0.01;\n\tconst x = sl * size;\n\tconst y = st * size + 0.75 * settings.mSize * 0.01 * size;\n\n\tctx.strokeText(settings.label, x, y);\n\tctx.fillText(settings.label, x, y);\n};\n\nconst draw_image = (ctx: CanvasRenderingContext2D, settings: KjuaOptions) => {\n\tconst size = settings.size;\n\tconst w = settings.image!.naturalWidth || 1;\n\tconst h = settings.image!.naturalHeight || 1;\n\tconst sh = settings.mSize * 0.01;\n\tconst sw = (sh * w) / h;\n\tconst sl = (1 - sw) * settings.mPosX * 0.01;\n\tconst st = (1 - sh) * settings.mPosY * 0.01;\n\tconst x = sl * size;\n\tconst y = st * size;\n\tconst iw = sw * size;\n\tconst ih = sh * size;\n\n\tctx.drawImage(settings.image!, x, y, iw, ih);\n};\n\nconst draw_mode = (ctx: CanvasRenderingContext2D, settings: KjuaOptions) => {\n\tconst mode = settings.mode;\n\tif (mode === 'label') {\n\t\tdraw_label(ctx, settings);\n\t} else if (mode === 'image') {\n\t\tdraw_image(ctx, settings);\n\t}\n};\n\nexport default draw_mode;\n","const win = window; // eslint-disable-line no-undef\nconst doc = win.document;\nexport const dpr = win.devicePixelRatio || 1;\n\nexport const SVG_NS = 'http://www.w3.org/2000/svg';\n\nexport const get_attr = (el: HTMLElement | SVGElement, key: string) =>\n\tel.getAttribute(key);\n\nexport const set_attrs = <T extends HTMLElement | SVGElement>(\n\tel: T,\n\tobj: Record<string, any>,\n) => {\n\tObject.keys(obj || {}).forEach((key) => {\n\t\tel.setAttribute(key, obj[key]);\n\t});\n\n\treturn el;\n};\n\nexport const create_el = <T extends keyof HTMLElementTagNameMap>(\n\tname: T,\n\tobj: Record<string, any>,\n) => set_attrs(doc.createElement<T>(name), obj);\n\nexport const create_svg_el = (\n\tname: string,\n\tobj: Record<string, any>,\n): SVGElement => set_attrs(doc.createElementNS(SVG_NS, name), obj);\n\nexport const create_canvas = (size: number, ratio: number) => {\n\tconst canvas = create_el('canvas', {\n\t\twidth: size * ratio,\n\t\theight: size * ratio,\n\t});\n\tcanvas.style.width = `${size}px`;\n\tcanvas.style.height = `${size}px`;\n\treturn canvas;\n};\n\nexport const canvas_to_img = (canvas: HTMLCanvasElement) => {\n\tconst img = create_el('img', {\n\t\tcrossOrigin: 'anonymous',\n\t\tsrc: canvas.toDataURL('image/png'),\n\t\twidth: get_attr(canvas, 'width'),\n\t\theight: get_attr(canvas, 'height'),\n\t});\n\timg.style.width = canvas.style.width;\n\timg.style.height = canvas.style.height;\n\treturn img;\n};\n","import type { KjuaOptions } from './options';\nimport type { QRCode } from './qrcode';\n\nimport draw_module_rounded from './draw_rounded';\nimport draw_mode from './draw_mode';\nimport * as dom from './dom';\n\nconst draw_background = (\n\tctx: CanvasRenderingContext2D,\n\tsettings: KjuaOptions,\n) => {\n\tif (settings.back) {\n\t\tctx.fillStyle = settings.back;\n\t\tctx.fillRect(0, 0, settings.size, settings.size);\n\t}\n};\n\nconst draw_module_default = (\n\tqr: QRCode,\n\tctx: CanvasRenderingContext2D,\n\tsettings: KjuaOptions,\n\twidth: number,\n\trow: number,\n\tcol: number,\n) => {\n\tif (qr.is_dark(row, col)) {\n\t\tctx.rect(col * width, row * width, width, width);\n\t}\n};\n\nconst draw_modules = (\n\tqr: QRCode,\n\tctx: CanvasRenderingContext2D,\n\tsettings: KjuaOptions,\n) => {\n\tif (!qr) {\n\t\treturn;\n\t}\n\n\tconst draw_module =\n\t\tsettings.rounded > 0 && settings.rounded <= 100\n\t\t\t? draw_module_rounded\n\t\t\t: draw_module_default;\n\tconst mod_count = qr.module_count;\n\n\tlet mod_size = settings.size / mod_count;\n\tlet offset = 0;\n\tif (settings.crisp) {\n\t\tmod_size = Math.floor(mod_size);\n\t\toffset = Math.floor((settings.size - mod_size * mod_count) / 2);\n\t}\n\n\tctx.translate(offset, offset);\n\tctx.beginPath();\n\tfor (let row = 0; row < mod_count; row += 1) {\n\t\tfor (let col = 0; col < mod_count; col += 1) {\n\t\t\tdraw_module(qr, ctx, settings, mod_size, row, col);\n\t\t}\n\t}\n\tctx.fillStyle = settings.fill;\n\tctx.fill();\n\tctx.translate(-offset, -offset);\n};\n\nconst draw = (\n\tqr: QRCode,\n\tctx: CanvasRenderingContext2D,\n\tsettings: KjuaOptions,\n) => {\n\tdraw_background(ctx, settings);\n\tdraw_modules(qr, ctx, settings);\n\tdraw_mode(ctx, settings);\n};\n\nconst create_canvas_qrcode = (\n\tqr: QRCode,\n\tsettings: KjuaOptions,\n\tas_image: boolean,\n) => {\n\tconst ratio = settings.ratio || dom.dpr;\n\tconst canvas = dom.create_canvas(settings.size, ratio);\n\tconst context = canvas.getContext('2d')!;\n\n\tcontext.scale(ratio, ratio);\n\tdraw(qr, context, settings);\n\treturn as_image ? dom.canvas_to_img(canvas) : canvas;\n};\n\nexport default create_canvas_qrcode;\n","import { SVG_NS, get_attr, create_svg_el, dpr, create_canvas } from './dom';\nimport type { KjuaOptions } from './options';\nimport type { QRCode } from './qrcode';\n\nconst create_draw_ctx = (ctx: { p: string; o: number }) => {\n\tconst rnd = (x: number) => Math.round(x * 10) / 10;\n\tconst rndo = (x: number) => Math.round(x * 10) / 10 + ctx.o;\n\treturn {\n\t\tm(x: number, y: number) {\n\t\t\tctx.p += `M ${rndo(x)} ${rndo(y)} `;\n\t\t\treturn this;\n\t\t},\n\t\tl(x: number, y: number) {\n\t\t\tctx.p += `L ${rndo(x)} ${rndo(y)} `;\n\t\t\treturn this;\n\t\t},\n\t\ta(x: number, y: number, rad: number) {\n\t\t\tctx.p += `A ${rnd(rad)} ${rnd(rad)} 0 0 1 ${rndo(x)} ${rndo(y)} `;\n\t\t\treturn this;\n\t\t},\n\t};\n};\n\ntype DrawCtx = ReturnType<typeof create_draw_ctx>;\n\nconst draw_dark = (\n\tctx: DrawCtx,\n\tl: number,\n\tt: number,\n\tr: number,\n\tb: number,\n\trad: number,\n\tnw: boolean,\n\tne: boolean,\n\tse: boolean,\n\tsw: boolean,\n) => {\n\tif (nw) {\n\t\tctx.m(l + rad, t);\n\t} else {\n\t\tctx.m(l, t);\n\t}\n\n\tif (ne) {\n\t\tctx.l(r - rad, t).a(r, t + rad, rad);\n\t} else {\n\t\tctx.l(r, t);\n\t}\n\n\tif (se) {\n\t\tctx.l(r, b - rad).a(r - rad, b, rad);\n\t} else {\n\t\tctx.l(r, b);\n\t}\n\n\tif (sw) {\n\t\tctx.l(l + rad, b).a(l, b - rad, rad);\n\t} else {\n\t\tctx.l(l, b);\n\t}\n\n\tif (nw) {\n\t\tctx.l(l, t + rad).a(l + rad, t, rad);\n\t} else {\n\t\tctx.l(l, t);\n\t}\n};\n\nconst draw_light = (\n\tctx: DrawCtx,\n\tl: number,\n\tt: number,\n\tr: number,\n\tb: number,\n\trad: number,\n\tnw: boolean,\n\tne: boolean,\n\tse: boolean,\n\tsw: boolean,\n) => {\n\tif (nw) {\n\t\tctx.m(l + rad, t)\n\t\t\t.l(l, t)\n\t\t\t.l(l, t + rad)\n\t\t\t.a(l + rad, t, rad);\n\t}\n\n\tif (ne) {\n\t\tctx.m(r, t + rad)\n\t\t\t.l(r, t)\n\t\t\t.l(r - rad, t)\n\t\t\t.a(r, t + rad, rad);\n\t}\n\n\tif (se) {\n\t\tctx.m(r - rad, b)\n\t\t\t.l(r, b)\n\t\t\t.l(r, b - rad)\n\t\t\t.a(r - rad, b, rad);\n\t}\n\n\tif (sw) {\n\t\tctx.m(l, b - rad)\n\t\t\t.l(l, b)\n\t\t\t.l(l + rad, b)\n\t\t\t.a(l, b - rad, rad);\n\t}\n};\n\nconst draw_mod = (\n\tqr: QRCode,\n\tctx: DrawCtx,\n\toptions: KjuaOptions,\n\twidth: number,\n\trow: number,\n\tcol: number,\n) => {\n\tconst left = col * width;\n\tconst top = row * width;\n\tconst right = left + width;\n\tconst bottom = top + width;\n\tconst radius = options.rounded * 0.005 * width;\n\n\tconst is_dark = qr.is_dark;\n\tconst row_n = row - 1;\n\tconst row_s = row + 1;\n\tconst col_w = col - 1;\n\tconst col_e = col + 1;\n\tconst dark_center = is_dark(row, col);\n\tconst dark_nw = is_dark(row_n, col_w);\n\tconst dark_n = is_dark(row_n, col);\n\tconst dark_ne = is_dark(row_n, col_e);\n\tconst dark_e = is_dark(row, col_e);\n\tconst dark_se = is_dark(row_s, col_e);\n\tconst dark_s = is_dark(row_s, col);\n\tconst dark_sw = is_dark(row_s, col_w);\n\tconst dark_w = is_dark(row, col_w);\n\n\tif (dark_center) {\n\t\tdraw_dark(\n\t\t\tctx,\n\t\t\tleft,\n\t\t\ttop,\n\t\t\tright,\n\t\t\tbottom,\n\t\t\tradius,\n\t\t\t!dark_n && !dark_w,\n\t\t\t!dark_n && !dark_e,\n\t\t\t!dark_s && !dark_e,\n\t\t\t!dark_s && !dark_w,\n\t\t);\n\t} else {\n\t\tdraw_light(\n\t\t\tctx,\n\t\t\tleft,\n\t\t\ttop,\n\t\t\tright,\n\t\t\tbottom,\n\t\t\tradius,\n\t\t\tdark_n && dark_w && dark_nw,\n\t\t\tdark_n && dark_e && dark_ne,\n\t\t\tdark_s && dark_e && dark_se,\n\t\t\tdark_s && dark_w && dark_sw,\n\t\t);\n\t}\n};\n\nconst create_path = (qr: QRCode, options: KjuaOptions) => {\n\tif (!qr) {\n\t\treturn '';\n\t}\n\n\tconst ctx = { p: '', o: 0 };\n\tconst mod_count = qr.module_count;\n\tlet mod_size = options.size / mod_count;\n\tif (options.crisp) {\n\t\tmod_size = Math.floor(mod_size);\n\t\tctx.o = Math.floor((options.size - mod_size * mod_count) / 2);\n\t}\n\n\tconst draw_ctx = create_draw_ctx(ctx);\n\tfor (let row = 0; row < mod_count; row += 1) {\n\t\tfor (let col = 0; col < mod_count; col += 1) {\n\t\t\tdraw_mod(qr, draw_ctx, options, mod_size, row, col);\n\t\t}\n\t}\n\n\treturn ctx.p;\n};\n\nconst add_label = (el: SVGElement, options: KjuaOptions) => {\n\tconst size = options.size;\n\tconst font =\n\t\t'bold ' + options.mSize * 0.01 * size + 'px ' + options.fontname;\n\n\tconst ratio = options.ratio || dpr;\n\tconst ctx = create_canvas(size, ratio).getContext('2d')!;\n\tctx.strokeStyle = options.back;\n\tctx.lineWidth = options.mSize * 0.01 * size * 0.1;\n\tctx.fillStyle = options.fontcolor;\n\tctx.font = font;\n\tconst w = ctx.measureText(options.label).width;\n\n\tconst sh = options.mSize * 0.01;\n\tconst sw = w / size;\n\tconst sl = (1 - sw) * options.mPosX * 0.01;\n\tconst st = (1 - sh) * options.mPosY * 0.01;\n\tconst x = sl * size;\n\tconst y = st * size + 0.75 * options.mSize * 0.01 * size;\n\n\tconst text_el = create_svg_el('text', {\n\t\tx,\n\t\ty,\n\t});\n\tObject.assign(text_el.style, {\n\t\tfont,\n\t\tfill: options.fontcolor,\n\t\t'paint-order': 'stroke',\n\t\tstroke: options.back,\n\t\t'stroke-width': ctx.lineWidth,\n\t});\n\n\ttext_el.textContent = options.label;\n\tel.appendChild(text_el);\n};\n\nconst add_image = (el: SVGElement, options: KjuaOptions) => {\n\tif (!options.image) {\n\t\tconsole.error('kjua: image is enabled but none given');\n\t\treturn;\n\t}\n\n\tconst size = options.size;\n\tconst w = options.image.naturalWidth || 1;\n\tconst h = options.image.naturalHeight || 1;\n\tconst sh = options.mSize * 0.01;\n\tconst sw = (sh * w) / h;\n\tconst sl = (1 - sw) * options.mPosX * 0.01;\n\tconst st = (1 - sh) * options.mPosY * 0.01;\n\tconst x = sl * size;\n\tconst y = st * size;\n\tconst iw = sw * size;\n\tconst ih = sh * size;\n\n\tconst img_el = create_svg_el('image', {\n\t\thref: get_attr(options.image, 'src'),\n\t\tx,\n\t\ty,\n\t\twidth: iw,\n\t\theight: ih,\n\t});\n\n\tel.appendChild(img_el);\n};\n\nconst create_svg_qrcode = (qr: QRCode, options: KjuaOptions) => {\n\tconst size = options.size;\n\tconst mode = options.mode;\n\n\tconst svg_el = create_svg_el('svg', {\n\t\txmlns: SVG_NS,\n\t\twidth: size,\n\t\theight: size,\n\t\tviewBox: `0 0 ${size} ${size}`,\n\t});\n\tsvg_el.style.width = `${size}px`;\n\tsvg_el.style.height = `${size}px`;\n\n\tif (options.back) {\n\t\tsvg_el.appendChild(\n\t\t\tcreate_svg_el('rect', {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\twidth: size,\n\t\t\t\theight: size,\n\t\t\t\tfill: options.back,\n\t\t\t}),\n\t\t);\n\t}\n\n\tsvg_el.appendChild(\n\t\tcreate_svg_el('path', {\n\t\t\td: create_path(qr, options),\n\t\t\tfill: options.fill,\n\t\t}),\n\t);\n\n\tif (mode === 'label') {\n\t\tadd_label(svg_el, options);\n\t} else if (mode === 'image') {\n\t\tadd_image(svg_el, options);\n\t}\n\n\treturn svg_el;\n};\n\nexport default create_svg_qrcode;\n","export type ErrorCorrectionLevel = 'L' | 'M' | 'Q' | 'H';\n\n// todo doc comments\nexport interface KjuaOptions {\n\t// render method: 'canvas', 'image' or 'svg'\n\trender: 'canvas' | 'image' | 'svg';\n\n\t// render pixel-perfect lines\n\tcrisp: boolean;\n\n\t// minimum version: 1..40\n\tminVersion: number;\n\n\t// error correction level: 'L', 'M', 'Q' or 'H'\n\tecLevel: ErrorCorrectionLevel;\n\n\t// size in pixel\n\tsize: number;\n\n\t// pixel-ratio, null for devicePixelRatio\n\tratio: number | null;\n\n\t// code color\n\tfill: string;\n\n\t// background color\n\tback: string;\n\n\t// content\n\ttext: string;\n\n\t// roundend corners in pc: 0..100\n\trounded: number;\n\n\t// quiet zone in modules\n\tquiet: number;\n\n\t// modes: 'plain', 'label' or 'image'\n\tmode: 'plain' | 'label' | 'image';\n\n\t// label/image size and pos in pc: 0..100\n\tmSize: number;\n\tmPosX: number;\n\tmPosY: number;\n\n\t// label\n\tlabel: string;\n\tfontname: string;\n\tfontcolor: string;\n\n\t// image element\n\timage: HTMLImageElement | null;\n}\n\nexport const defaultOptions: KjuaOptions = {\n\t// render method: 'canvas', 'image' or 'svg'\n\trender: 'image',\n\n\t// render pixel-perfect lines\n\tcrisp: true,\n\n\t// minimum version: 1..40\n\tminVersion: 1,\n\n\t// error correction level: 'L', 'M', 'Q' or 'H'\n\tecLevel: 'L',\n\n\t// size in pixel\n\tsize: 200,\n\n\t// pixel-ratio, null for devicePixelRatio\n\tratio: null,\n\n\t// code color\n\tfill: '#333',\n\n\t// background color\n\tback: '#fff',\n\n\t// content\n\ttext: 'https://github.com/ghostdevv/kjua',\n\n\t// roundend corners in pc: 0..100\n\trounded: 0,\n\n\t// quiet zone in modules\n\tquiet: 0,\n\n\t// modes: 'plain', 'label' or 'image'\n\tmode: 'plain',\n\n\t// label/image size and pos in pc: 0..100\n\tmSize: 30,\n\tmPosX: 50,\n\tmPosY: 50,\n\n\t// label\n\tlabel: 'no label',\n\tfontname: 'sans',\n\tfontcolor: '#333',\n\n\t// image element\n\timage: null,\n};\n","import type { ErrorCorrectionLevel } from './options';\nimport * as qr_gen from 'qrcode-generator';\n\n// @ts-expect-error need to check if this is equired\n// qr_gen.stringToBytes = qr_gen.stringToBytesFuncs['UTF-8'];\n\nconst RE_CODE_LENGTH_OVERFLOW = /code length overflow/i;\n\nconst min_qrcode = (text: string, level: ErrorCorrectionLevel, min_ver = 1) => {\n\tmin_ver = Math.max(1, min_ver);\n\n\tfor (let version = min_ver; version <= 40; version += 1) {\n\t\ttry {\n\t\t\t// @ts-ignore todo fix this version type\n\t\t\tconst qr = qr_gen.default(version, level);\n\t\t\tqr.addData(text);\n\t\t\tqr.make();\n\n\t\t\tconst module_count = qr.getModuleCount();\n\n\t\t\tconst is_dark = (row: number, col: number) => {\n\t\t\t\treturn (\n\t\t\t\t\trow >= 0 &&\n\t\t\t\t\trow < module_count &&\n\t\t\t\t\tcol >= 0 &&\n\t\t\t\t\tcol < module_count &&\n\t\t\t\t\tqr.isDark(row, col)\n\t\t\t\t);\n\t\t\t};\n\n\t\t\treturn { text, level, version, module_count, is_dark };\n\t\t} catch (err) {\n\t\t\tif (!(version < 40 && RE_CODE_LENGTH_OVERFLOW.test(err as any))) {\n\t\t\t\tthrow new Error(err as any);\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n};\n\nconst quiet_qrcode = (\n\ttext = '',\n\tlevel: ErrorCorrectionLevel = 'L',\n\tmin_ver = 1,\n\tquiet = 0,\n) => {\n\tconst qr = min_qrcode(text, level, min_ver);\n\n\tif (qr) {\n\t\tconst prev_is_dark = qr.is_dark;\n\t\tqr.module_count += 2 * quiet;\n\t\tqr.is_dark = (row, col) => prev_is_dark(row - quiet, col - quiet);\n\t}\n\n\treturn qr;\n};\n\nexport type QRCode = Exclude<ReturnType<typeof quiet_qrcode>, null>;\n\nexport default quiet_qrcode;\n","import create_canvas_qrcode from './lib/create_canvas_qrcode';\nimport create_svg_qrcode from './lib/create_svg_qrcode';\nimport { defaultOptions, type KjuaOptions } from './lib/options';\nimport qrcode from './lib/qrcode';\n\nexport const kjua = (inputOptions: Partial<KjuaOptions>) => {\n\tconst options: KjuaOptions = { ...defaultOptions, ...inputOptions };\n\n\tconst qr = qrcode(\n\t\toptions.text,\n\t\toptions.ecLevel,\n\t\toptions.minVersion,\n\t\toptions.quiet,\n\t)!;\n\n\tif (options.render === 'svg') {\n\t\treturn create_svg_qrcode(qr, options);\n\t}\n\treturn create_canvas_qrcode(qr, options, options.render === 'image');\n};\n\nexport type { KjuaOptions, ErrorCorrectionLevel } from './lib/options';\n"],"mappings":"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","names":["create_draw_ctx","draw_dark","draw_light"]}